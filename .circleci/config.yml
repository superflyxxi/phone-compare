version: 2.1

orbs:
  node: circleci/node@4
  docker: circleci/docker@1

jobs:
  test:
    executor: 
      name: node/default
    steps:
      - checkout
      - node/install-packages:
          override-ci-command: npm install
      - run:
          command: npm test
      - run:
          name: Ensure only not used
          command: |
            if ! grep ".only" -Rq test/; then
              echo "Tests include only; failng"
              exit 1
            fi
  docker:
    machine: 
      image: ubuntu-2004:202101-01
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Determine docker tag
          command: echo "DOCKER_TAG=$(cat /tmp/workspace/version.txt)" >> ${BASH_ENV}
      - docker/check:
          registry: ${DOCKER_REGISTRY}
      - checkout
      - when:
          condition:
            equal: [ master, << pipeline.git.branch >> ]
          steps:
            - run:
                name: Determine alternate tag
                command: |
                  if [[ "${DOCKER_TAG}" == v* ]]; then
                    echo "ALTERNATE_TAG=latest" >> ${BASH_ENV}
                  fi
      - docker/build:
          image: ${CIRCLE_PROJECT_REPONAME}
          registry: ${DOCKER_REGISTRY}
          tag: ${DOCKER_TAG},${ALTERNATE_TAG}
      - docker/push:
          image: ${CIRCLE_PROJECT_REPONAME}
          registry: ${DOCKER_REGISTRY}
          tag: ${DOCKER_TAG},${ALTERNATE_TAG}
  release:
    docker:
      - image: circleci/node
    parameters:
      prerelease:
        description: Whether it's a pre-release and not actually release.
        type: boolean
        default: false
    steps:
      - checkout
      - run: npm install
      - run: npm install -D @semantic-release/exec
      - attach_workspace:
          at: /tmp/workspace
      - when:
          condition: << parameters.prerelease >>
          steps:
            run:
              name: Define additional args
              command: |
                echo "ADDITIONAL_ARGS=--dry-run" >> ${BASH_ENV}
      - run:
          name: Run semantic-release
          command: |
            npx semantic-release ${ADDITIONAL_ARGS}
            if [[ "" == "$(cat version.txt)" ]]; then 
              echo "${CIRCLE_BRANCH}" > /tmp/workspace/version.txt
            else
              cp -v version.txt /tmp/workspace
            fi
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - version.txt

workflows:
  build-deploy:
    jobs:
      - release:
          name: pre-release
          prerelease: true
      - test
      - docker:
          requires:
            - test
            - pre-release
      - release:
          prerelease: false
#          filters:
#            branches:
#              only:
#                - main
          requires:
            - docker
